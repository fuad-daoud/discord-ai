name: build-deploy

on:
  push:
    branches: [ "*" ]
  create:
    tags: [ "*" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: stop service if running
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 165.22.92.220
          username: root
          password: 1234Test
          script: |
            service_status=$(pm2 jlist|jq '.[]|select(. | contains({name: "${{ format('{0}-{1}', vars.SERVICE, github.ref_name) }}"})).pm2_env.status')
            if [[ "$service_status" == "\"online\"" ]]; then pm2 stop ${{ format('{0}-{1}', vars.SERVICE, github.ref_name) }}; fi


  build:
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          show-progress: true
      - name: Setup Go 1.22.x
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Display Go version
        run: go version
      - name: check cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: download dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download
      - name: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: build binary
        run: go build -v -x -o "/home/runner/artifacts/run" "./cmd/ai/main/main.go"
      - name: cp cohere inst
        run: cp ${{ github.workspace }}/integrations/cohere/cohere-inst.txt /home/runner/artifacts
      - name: cache
        uses: actions/cache@v4
        with:
          path: /home/runner/artifacts
          key: artifacts-${{ github.ref_name }}

  helm:
    runs-on: ubuntu-latest
    container: alpine/helm:3.15.2
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            cloud
          sparse-checkout-cone-mode: false
          show-progress: true
      - name: Linting
        run: helm lint cloud
      - name: Templating
        run: |
          helm template cloud --output-dir cloud/rendered \
            --set name=${{ format('{0}-{1}', vars.SERVICE, github.ref_name) }} \
            --set script="/root/${{ vars.SERVICE }}/${{ github.ref_name }}/run" \
            --set cwd="/root/${{ vars.SERVICE }}/${{ github.ref_name }}" \
            --set env.TOKEN=${{ github.ref_type == 'tag' && vars.LUNA_TOKEN || vars.LUNA_BETA_TOKEN }} \
            --set env.NEO4J_DATABASE_URL=${{ vars.NEO4J_DATABASE_URL }} \
            --set env.NEO4J_DATABASE_USER=${{ vars.NEO4J_DATABASE_USER }} \
            --set env.NEO4J_DATABASE_PASSWORD=${{ vars.NEO4J_DATABASE_PASSWORD }} \
            --set env.CLIENT_ID=${{ vars.CLIENT_ID }} \
            --set env.CLIENT_SECRET=${{ vars.CLIENT_SECRET }} \
            --set env.DEEPGRAM_API_KEY=${{ vars.DEEPGRAM_API_KEY }} \
            --set env.ELVENLABS_API_KEY=${{ vars.ELVENLABS_API_KEY }} \
            --set env.COHERE_INST=${{ vars.COHERE_INST }} \
            --set env.ARCHIVE_CRON=${{ vars.ARCHIVE_CRON }} \

  upload:
    runs-on: ubuntu-latest
    needs: [helm, build]
    steps:
      - name: restore cache
        uses: actions/cache@v4
        with:
          fail-on-cache-miss: true
          path: /home/runner/artifacts
          key: artifacts-${{ github.ref_name }}
      - name: ls cache
        run: tree -aI /home/runner/artifacts
      - name: scp binary to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 165.22.92.220
          username: root
          password: 1234Test
          source: /home/runner/artifacts
          target: /root/${{ vars.SERVICE }}/${{ github.ref_name }}
          strip_components: 3
          overwrite: true
#      - name: scp cohere inst
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: 165.22.92.220
#          username: root
#          password: 1234Test
#          source: /artifacts/cohere-inst.txt
#          target: /root/${{ vars.SERVICE }}/${{ github.ref_name }}
#          strip_components: 4
#          overwrite: true
  call_deploy:
    uses: ./.github/workflows/deploy.yml
    needs: [ helm, build ]
    with:
      cleanup: ${{ github.ref_type != 'tag' }}