name: Release

on:
  push:
    branches: ["main"]
  create:
    tags: ["*"]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.22.4-bookworm
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          show-progress: true
      - name: go build
        run: go build -o "$GITHUB_WORKSPACE/discord-ai" "$GITHUB_WORKSPACE/cmd/ai/main/main.go"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: "discord-ai-${{ github.ref_name }}"
          path: ${{ github.workspace }}/discord-ai
          retention-days: 1
          if-no-files-found: error

  docker-build-upload:
    runs-on: ubuntu-latest
    needs: ["build"]
    permissions:
      contents: 'read'
      id-token: 'write'
      actions: 'read'
    steps:
      - name: Checkout the Dockerfile
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Dockerfile
            dca
          sparse-checkout-cone-mode: false
          show-progress: true
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "discord-ai-${{ github.ref_name }}"
          path: ${{ github.workspace }}
          merge-multiple: true
      - name: fix permissions
        run: chmod 755 discord-ai && chmod 755 dca
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag "${{ vars.IMAGE_PATH }}:${{ github.ref_name }}"
      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.GCLOUD_PROVIDER }}
          service_account: ${{ vars.GCLOUD_SERVICE_ACCOUNT }}
          create_credentials_file: true
      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: me-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: upload
        run: docker push ${{ vars.IMAGE_PATH }}:${{ github.ref_name }}

  deploy:
    runs-on: ubuntu-latest
    needs: [docker-build-upload]
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.GCLOUD_PROVIDER }}
          service_account: ${{ vars.GCLOUD_SERVICE_ACCOUNT }}
          create_credentials_file: true
      - name: Update cloud run service
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ vars.SERVICE }}
          image: ${{ vars.IMAGE_PATH }}:${{ github.ref_name }}
          region: ${{ vars.REGION }}
          env_vars: |
            TOKEN=${{ vars.LUNA_TOKEN }}
      - name: bot url
        run: echo "url at\n${{ steps.deploy.outputs.url }}"